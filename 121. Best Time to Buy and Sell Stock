#brute
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        max_profit = 0

        for i in range(len(prices)):
            for j in range(i + 1, len(prices)):
                profit = prices[j] - prices[i]
                max_profit = max(max_profit, profit)

        return max_profit

#better
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        n = len(prices)
        if n <= 1:
            return 0

        min_prices = [0] * n
        min_prices[0] = prices[0]
        max_profit = 0

        for i in range(1, n):
            min_prices[i] = min(min_prices[i - 1], prices[i])
            max_profit = max(max_profit, prices[i] - min_prices[i])

        return max_profit

#optimal
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        diff,mini=0,prices[0]
        for i in prices[1:]:
            mini= min(mini,i)
            diff = max(diff,i-mini)
        return diff
